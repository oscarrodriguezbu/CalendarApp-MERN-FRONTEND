{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/Navbar.js","helpers/calendar-messages-es.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","routers/PublicRoute.js","routers/PrivateRoute.js","routers/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","initiaSstate","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchSinToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchConToken","token","localStorage","getItem","moment","locale","prepareEvents","end","toDate","start","eventAddNew","event","eventClearActiveEvent","eventUpdate","eventDeleted","eventLoaded","startLoggout","dispatch","clear","loggout","login","user","checkingFinish","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","loginEmail","loginPassword","formLoginValues","handleLoginInputChange","registerName","registerEmail","registerPassword","registerPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","password2","errors","Navbar","useSelector","onClick","messages","allDay","previous","next","today","month","week","day","agenda","date","time","noEventsInRange","showMore","total","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onAfterOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","format","minDate","autoComplete","rows","momentStart","momentEnd","isSameOrAfter","console","log","trim","length","getState","evento","_id","eventStartAddNew","AddNewFab","DeleteEventFab","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","then","result","isConfirmed","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","color","outline","onDoubleClickEvent","onSelectEvent","onView","onSelectSlot","selectable","view","components","PublicRoute","isAuthenticated","Component","component","rest","props","to","PrivateRoute","AppRouter","height","width","timeout","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a79e6c56.chunk.js","sourcesContent":["//es la lista de las acciones y cada uno es un action.type\r\n\r\nexport const types = {\r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal:  '[ui] Close modal',\r\n\r\n    eventSetActive:  '[event] Set Active',\r\n    eventStartAddNew:  '[event] Start the process to add new event',\r\n    eventAddNew:  '[event] Add new event',\r\n    eventClearActiveEvent:  '[event] Clear active event',\r\n    eventUpdate:  '[event] Event updated',\r\n    eventDeleted:  '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n    eventLoggout: '[event] Clean events at the loggout moment',\r\n\r\n    authChekingFinish: '[auth] Finish cheking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Strart register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLoggout: '[auth] Loggout',\r\n\r\n\r\n\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) { //por ejemplo trae a authStartLogin: '[auth] Start login'\r\n\r\n        case types.authLogin:\r\n            return {\r\n                ...state,\r\n                checking: false,\r\n                ...action.payload\r\n            }\r\n        /* \r\n            y hace los cambios respectivos segun lo que esté en la accion en auth.js:\r\n            {\r\n                type: '[auth] Login',\r\n                    payload: {\r\n                    uid: '60a1f57f80f71000155a0b16',\r\n                    name: 'Cosita'\r\n                }\r\n            }\r\n    \r\n        */\r\n\r\n        case types.authChekingFinish:\r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n\r\n        case types.authLoggout:\r\n            return {\r\n                checking: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import moment from \"moment\";\r\nimport { types } from \"../types/types\";\r\n\r\n/*  referencia de lo que debe traer la base de datos\r\nid: new Date().getTime(),\r\n        title: 'Cumpleaños',\r\n        start: moment().toDate(),\r\n        end: moment().add(2, 'hours').toDate(),\r\n        bgcolor: '#fafafa',\r\n        notes: 'Comprar el pastel',\r\n        user: {\r\n            _id: '123',\r\n            name: 'Oscar'\r\n        } */\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n};\r\n\r\n\r\nexport const calendarReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [\r\n                    ...state.events,\r\n                    action.payload\r\n                ]\r\n            }\r\n\r\n        case types.eventClearActiveEvent:\r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map( //map recorre arreglos\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter( //filter, recorre y filtra los que no quiero que aparezcan\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state,\r\n                events: [...action.payload]\r\n            }\r\n\r\n        case types.eventLoggout:\r\n            return {\r\n                ...initialState\r\n            }\r\n\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n","import { types } from \"../types/types\";\r\n\r\nconst initiaSstate = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = (state = initiaSstate, action) => {\r\n    switch (action.type) {\r\n        case types.uiOpenModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n\r\n        case types.uiCloseModal:\r\n\r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport { authReducer } from './authReducer';\r\nimport { calendarReducer } from './calendarReducer';\r\nimport { uiReducer } from './uiReducer';\r\n\r\nexport const rootReducer = combineReducers ({\r\n    ui:uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n\r\n\r\n\r\n\r\n})  ","import {createStore, compose, applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { rootReducer } from '../reducers/rootReducer';\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware(thunk)\r\n    )\r\n) \r\n","//Al parecer todo este proceso de fetch se puede hacer mas facil con algo que se llama axios\r\n\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n\r\nexport const fetchSinToken = (endpoint, data, method= 'GET') => { //el valor por defecto de method es GET pero puede cambiar segun lo que venga\r\n    const url = `${baseUrl}/${endpoint}`; // esto crea algo como http://localhost:4000/api/auth/\r\n\r\n    if (method ==='GET') {\r\n        return fetch(url);\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json' //esto toca ponerlo asi porque estamos trabajando cn json\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}\r\n\r\n\r\nexport const fetchConToken = (endpoint, data, method= 'GET') => { \r\n    const url = `${baseUrl}/${endpoint}`; \r\n    const token = localStorage.getItem('token') || ''; // '' es para evitar un posible valor null\r\n\r\n    if (method ==='GET') {\r\n        return fetch(url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else {\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify(data)\r\n        });\r\n    }\r\n}","import moment from 'moment';\r\nimport 'moment/locale/es-us'; //us para dejar Mayusculas y am y pm\r\nmoment.locale('es-us');\r\n\r\n\r\n\r\nexport const prepareEvents = ( events = []) => {\r\n    //console.log(events);\r\n\r\n    return events.map( //traer el todo y convertir las fechas de string a date\r\n        (e) => ({\r\n            ...e,\r\n            end: moment(e.end).toDate(),\r\n            start: moment(e.start).toDate()\r\n        })\r\n    );\r\n}","//todo esto se llama atraves de un dispatch cuando se requieran\r\n\r\nimport Swal from \"sweetalert2\";\r\nimport { fetchConToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n\r\nexport const eventStartAddNew = (event) => {\r\n    return async (dispatch, getState) => {\r\n\r\n        const { uid, name } = getState().auth; //esto viene del redux\r\n\r\n        try {\r\n            const resp = await fetchConToken('events', event, 'POST'); //event ES EL PAYLOAD\r\n            const body = await resp.json();\r\n            // console.log(body);\r\n            if (body.ok) {\r\n                event.id = body.evento.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name: name\r\n                }\r\n                //console.log(event);\r\n                dispatch(eventAddNew(event));\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n\r\n\r\n        //console.log(event);\r\n    }\r\n}\r\n\r\nconst eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n\r\n\r\n/* export const eventAddNew = (event) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n});\r\n */\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n});\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent,\r\n});\r\n\r\n\r\nexport const eventStartUpdate = (event) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            //console.log(event);\r\n            const resp = fetchConToken(`events/${event.id}`, event, 'PUT');\r\n            const body = await (await resp).json();\r\n\r\n\r\n            if (body.ok) {\r\n                dispatch(eventUpdate(event));\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst eventUpdate = (event) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n});\r\n\r\n\r\nexport const eventStartDelete = () => {\r\n    return async (dispatch, getState) => {\r\n        const { id } = getState().calendar.activeEvent;\r\n        //console.log(id);\r\n\r\n        try {\r\n            //console.log(event);\r\n            const resp = fetchConToken(`events/${id}`, {}, 'DELETE');\r\n            const body = await (await resp).json();\r\n\r\n\r\n            if (body.ok) {\r\n                dispatch(eventDeleted());\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted,\r\n});\r\n\r\nexport const eventStartLoading = () => {\r\n    return async (dispatch) => {\r\n        //console.log('xxx');\r\n\r\n        try {\r\n            const resp = await fetchConToken('events');\r\n            const body = await resp.json();\r\n            //console.log(body);\r\n\r\n            const events = prepareEvents(body.evento);\r\n\r\n            dispatch(eventLoaded(events));\r\n            //console.log(events);\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n};\r\n\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n});\r\n\r\nexport const eventLoggout = () => ({ type: types.eventLoggout });\r\n","import Swal from 'sweetalert2';\r\nimport { fetchConToken, fetchSinToken } from '../helpers/fetch';\r\nimport { types } from '../types/types';\r\nimport { eventLoggout } from './events';\r\n\r\nexport const startLogin = (email, password) => {\r\n    return async (dispatch) => {\r\n        //console.log(email, password);\r\n\r\n        const resp = await fetchSinToken('auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n\r\n        if (body.ok) {\r\n            localStorage.setItem('token', body.token); //guarda el token en localstorage\r\n            localStorage.setItem('token-init-date', new Date().getTime()); //guarda la hora en que se genera el token que por cierto tiene dos horas de validacion\r\n\r\n            dispatch(login({ //este dispatch se lo envia a LoginScreen con el return\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const startRegiser = (name, email, password, password2) => { //EL ORDEN IMPORTA Y DEBE SER TAL CUAL COMO ESTÁ EN EL BACKEND\r\n    return async (dispatch) => {\r\n        //console.log(email, password, name, password2);\r\n\r\n        const resp = await fetchSinToken('auth/new', { name, email, password, password2 }, 'POST');\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        //console.log(body.errors.name.msg);\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            if (body.errors) {\r\n\r\n                if (body.errors.name) {\r\n                    Swal.fire('Error', body.errors.name.msg, 'error');\r\n                } else if (body.errors.email) {\r\n                    Swal.fire('Error', body.errors.email.msg, 'error');\r\n                } else if (body.errors.password) {\r\n                    Swal.fire('Error', body.errors.password.msg, 'error');\r\n                } else if (body.errors.password2) {\r\n                    Swal.fire('Error', body.errors.password2.msg, 'error');\r\n                }\r\n\r\n            } else {\r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startChecking = () => {\r\n    return async (dispatch) => {\r\n        //console.log(email, password, name, password2);\r\n\r\n        const resp = await fetchConToken('auth/renew'); //siempre va a eser get\r\n        const body = await resp.json();\r\n        //console.log(body);\r\n        //console.log(body.errors.name.msg);\r\n\r\n        if (body.ok) {\r\n\r\n            localStorage.setItem('token', body.token);\r\n            localStorage.setItem('token-init-date', new Date().getTime());\r\n\r\n            dispatch(login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }))\r\n        } else {\r\n            //Swal.fire('Error', body.msg, 'error'); //No hace falta el mensaje de error del token pero lo comento por si acaso hay que hacer pruebas\r\n            dispatch(checkingFinish()) //esto se va a inicializar en el AppRouter\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport const startLoggout = () => {\r\n    return (dispatch) => {\r\n        localStorage.clear();\r\n        dispatch(eventLoggout()); //limpia la consola de los eventos que tenia el usuario. Esto se aprecia mejor en el state de la consola de redux\r\n        dispatch(loggout());\r\n    }\r\n}\r\n\r\nconst login = (user) => ({ //tambien lo usa el register porque estan en la misma vista\r\n    type: types.authLogin,\r\n    payload: user\r\n});\r\n\r\nconst loggout = () => ({type: types.authLoggout});\r\n\r\nconst checkingFinish = () => ({type: types.authChekingFinish});","import React, { useState } from 'react';\r\n\r\nexport const useForm = (initialState={}) => {\r\n   \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset =() => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values, \r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n\r\n}\r\n\r\n\r\n/* \r\nesto se puede usar para hacer cualquier cosa como validaciones y etc */","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegiser } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const [formLoginValues, handleLoginInputChange, resetLogin] = useForm({\r\n        loginEmail: 'xxxxx@gddmdail.com',\r\n        loginPassword: '123456Ahh*a'\r\n    });\r\n\r\n    const { loginEmail, loginPassword } = formLoginValues;\r\n\r\n    const [formRegisterValues, handleRegisterInputChange, resetRegister] = useForm({\r\n        registerName: 'Mia Kalifa',\r\n        registerEmail: 'hot69@sexymail.com',\r\n        registerPassword: '123456Ahh*a',\r\n        registerPassword2: '123456Ahh*a'\r\n    });\r\n\r\n    const { registerName, registerEmail, registerPassword, registerPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = (e) => {//NOTA: SE RECOMIENDA HACER UN VALIDACION POR ESTOS LADOS \r\n        e.preventDefault();\r\n\r\n\r\n        dispatch(startLogin(loginEmail, loginPassword));\r\n        //console.log(formLoginValues);\r\n    }\r\n\r\n    const handleRegister = (e) => {//NOTA: SE RECOMIENDA HACER UN VALIDACION POR ESTOS LADOS \r\n        e.preventDefault();\r\n\r\n        if (registerPassword !== registerPassword2) {\r\n           return Swal.fire('Error', 'Las contraseñas deben ser iguales', 'error');            \r\n        }\r\n\r\n        dispatch(startRegiser(\r\n            registerName,\r\n            registerEmail,\r\n            registerPassword,\r\n            registerPassword2\r\n        ));\r\n    }\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"loginEmail\"\r\n                                value={loginEmail}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"loginPassword\"\r\n                                value={loginPassword}\r\n                                onChange={handleLoginInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\"\r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={handleRegister}>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"registerName\"\r\n                                value={registerName}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"registerEmail\"\r\n                                value={registerEmail}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"registerPassword\"\r\n                                value={registerPassword}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\"\r\n                                name=\"registerPassword2\"\r\n                                value={registerPassword2}\r\n                                onChange={handleRegisterInputChange}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { startLoggout } from '../../actions/auth';\r\n\r\nexport const Navbar = () => {\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLoggout = () => {\r\n        dispatch( startLoggout());\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                {name}\r\n            </span>\r\n            <button \r\n            onClick={handleLoggout}\r\n            className=\"btn btn-outline-danger\"\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span>\r\n                    Salir\r\n                </span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","export const messages = {\r\n    allDay: 'Todo el día',\r\n    previous: '<',\r\n    next: '>',\r\n    today: 'Hoy',\r\n    month: 'Mes',\r\n    week: 'Semana',\r\n    day: 'Día',\r\n    agenda: 'Agenda',\r\n    date: 'Fecha',\r\n    time: 'Hora',\r\n    event: 'Evento',\r\n    noEventsInRange: 'No hay eventos en este rango',\r\n    showMore: total => `+ Ver más (${total})`\r\n};","import React from 'react';\r\n\r\nexport const CalendarEvent = ({event}) => {\r\n\r\n\r\n    const { title, user } = event;\r\n\r\n    const {name} = user;\r\n    //console.log(name);\r\n\r\n    return (\r\n        <div className=\"evento\">\r\n            <strong> {title} </strong>\r\n            <span>{name} </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\";\r\n\r\n\r\nexport const uiOpenModal = () => ({ \r\n    type: types.uiOpenModal \r\n});\r\n\r\nexport const uiCloseModal = () => ({ \r\n    type: types.uiCloseModal\r\n});","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker'; //selector de fechas\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventAddNew, eventClearActiveEvent, eventStartAddNew, eventStartUpdate, eventUpdate } from '../../actions/events';\r\n\r\n\r\n//import 'moment/locale/es-us'; //us para dejar Mayusculas y am y pm\r\n\r\n//moment.locale('es-us');\r\n//esto se puede dejar en un helper\r\nconst customStyles = {\r\n    content: {\r\n        top: '50%',\r\n        left: '50%',\r\n        right: 'auto',\r\n        bottom: 'auto',\r\n        marginRight: '-50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    }\r\n};\r\n\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours'); //3:00:00 formtato\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: 'Evento',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n\r\n    const { activeEvent } = useSelector(state => state.calendar); //para mirar el state es bueno revisar las herramientas de redux en el navegador\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    //const [isOpen, setIsOpen] = useState(true);\r\n\r\n    const [dateStart, setDateStart] = useState(now.toDate());\r\n    const [dateEnd, setDateEnd] = useState(nowPlus1.toDate());\r\n    const [titleValid, setTitleValid] = useState(true)\r\n\r\n    const [formValues, setFormValues] = useState(initEvent);\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    useEffect(() => {\r\n        if (activeEvent) {\r\n            setFormValues(activeEvent);\r\n        } else {\r\n            setFormValues(initEvent);\r\n        }\r\n    }, [activeEvent, setFormValues])\r\n\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues,\r\n            [target.name]: target.value\r\n        })\r\n    }\r\n\r\n    //se recomienda usar el isOpen con useState pero en este ejercicio se hace con Redux\r\n    const closeModal = () => {\r\n        //setIsOpen(false);\r\n        dispatch(uiCloseModal());\r\n        dispatch(eventClearActiveEvent());\r\n        setFormValues(initEvent); //para reestablecer el formulario\r\n    }\r\n\r\n    const afterOpenModal = () => {\r\n\r\n    }\r\n\r\n    const handleStartDateChange = (e) => { //maneja el date de js y no del moment\r\n        // console.log(e);\r\n        setDateStart(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        //  console.log(e);\r\n        setDateEnd(e);\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        // console.log(formValues);\r\n\r\n        const momentStart = moment(start);\r\n        const momentEnd = moment(end);\r\n\r\n        //validaciones\r\n        if (momentStart.isSameOrAfter(momentEnd, 'hour')) {\r\n            console.log('La fecha numero dos debe ser mayor');\r\n            Swal.fire('Error', 'La fecha numero dos debe ser mayor', 'error');\r\n            return;\r\n        }\r\n\r\n        if (title.trim().length < 2) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        //se pueden agregar mas validaciones\r\n\r\n        //actualizar o crear un nuevo evento si hay o no algun valor en el evento activo\r\n        if (activeEvent) {\r\n            /* dispatch(eventUpdate(formValues))  */ \r\n            dispatch(eventStartUpdate(formValues)) \r\n        } else {\r\n            /*  dispatch(eventStartAddNew({\r\n                 ...formValues,\r\n                 id: new Date().getTime(), //agrega un id temporalmente, mas adelante se hace con base de datos\r\n                 user: {\r\n                     _id: '123',\r\n                     name: 'Leonardo'\r\n                 }\r\n             })); */\r\n            dispatch(eventStartAddNew(formValues));\r\n        }\r\n\r\n\r\n\r\n        setTitleValid(true);\r\n        closeModal();\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Modal\r\n\r\n            isOpen={modalOpen}\r\n            onAfterOpen={afterOpenModal}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={200}\r\n            //contentLabel=\"Example Modal\"\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n            <h1> {(activeEvent) ? 'Editar evento' : 'Nuevo evento'} </h1>\r\n            <hr />\r\n            <form\r\n                //onSubmit={handleSubmitForm}\r\n                className=\"container\">\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={handleStartDateChange}\r\n                        value={dateStart}\r\n                        //maxDate={dateEnd}  creo que mejor no porque me impide seleccionar fechas posteriores\r\n                        className=\"form-control\"\r\n                        //format=\"MMMM d, yyyy - h:mm:ss a\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={handleEndDateChange}\r\n                        value={dateEnd}\r\n                        minDate={dateStart}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        className={`form-control ${!titleValid && 'is-invalid'}`}\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={title}\r\n                        onChange={handleInputChange}\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={notes}\r\n                        onChange={handleInputChange}\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    //type=\"submit\" //Me generaba un error y ahora con el onClick se soluciona pero \r\n                    //desde la hora de arriba no valida las horas iguales con la de abajo\r\n                    type=\"button\"\r\n                    onClick={handleSubmitForm}\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","//fab es flouting action button\r\n\r\nimport React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = (e) => {\r\n        // console.log(e);\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    return (\r\n        <button\r\n        className=\"btn btn-primary fab\"\r\n        onClick ={handleClickNew}\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { eventDeleted, eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDelete = (e) => {\r\n        // console.log(e);\r\n\r\n        Swal.fire({\r\n            title: 'Are you sure?',\r\n            text: \"You won't be able to revert this!\",\r\n            icon: 'warning',\r\n            showCancelButton: true,\r\n            confirmButtonColor: '#3085d6',\r\n            cancelButtonColor: '#d33',\r\n            confirmButtonText: 'Yes, delete it!'\r\n        }).then((result) => {\r\n            if (result.isConfirmed) {\r\n                dispatch(eventStartDelete());\r\n                Swal.fire(\r\n                    'Deleted!',\r\n                    'Your file has been deleted.',\r\n                    'success'\r\n                )\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={handleDelete}\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            {/*   <span> Borrar evento </span> */}\r\n\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar'; //import BigCalendar from 'react-big-calendar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport moment from 'moment';\r\nimport 'moment/locale/es-us'; //us para dejar Mayusculas y am y pm\r\n\r\nimport { Navbar } from '../ui/Navbar';\r\nimport { messages } from '../../helpers/calendar-messages-es';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\n\r\n\r\n\r\nmoment.locale('es-us');\r\n\r\n// Setup the localizer by providing the moment (or globalize) Object\r\n// to the correct localizer.\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n/* \r\n Esto era solo para hacer pruebas, ahora se usa el useSelector para agregar info\r\n\r\n    const events = [{\r\n    title: 'Cumpleaños',\r\n    start: moment().toDate(),\r\n    end: moment().add(2, 'hours').toDate(),\r\n    bgcolor: '#fafafa',\r\n    notes: 'Comprar el pastel',\r\n    user: {\r\n        _id: '123',\r\n        name: 'Oscar'\r\n    }\r\n}];\r\n */\r\n\r\n\r\nexport const CalendarScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [lastView, setLastView] = useState(localStorage.getItem('lastView') || 'month');\r\n\r\n    useEffect(() => {\r\n        dispatch(eventStartLoading());\r\n    }, [dispatch])\r\n\r\n    const onDoubleClickEvent = (e) => {\r\n        // console.log(e);\r\n        dispatch(uiOpenModal());\r\n    }\r\n\r\n    const onSelectEvent = (e) => {\r\n        // console.log(e);\r\n        dispatch(eventSetActive(e));\r\n\r\n    }\r\n\r\n    //ver vistas de dia mes semana y agenda\r\n    const onViewChange = (e) => {\r\n        //console.log(e);\r\n        setLastView(e);\r\n        localStorage.setItem('lastView', e); //almacenar en localstorage\r\n    }\r\n\r\n    //tiene el lugar donde se hace click en cualquier slot y se puede trabajar algunos cositas aqui\r\n    //tal vez se podria quitar el boton de agregar evento y en su lugar, seleccionar el campo donde se desee agregar y listo\r\n    const onSelectSlot = (e) => {\r\n        // console.log(e);\r\n\r\n        dispatch(eventClearActiveEvent());\r\n    }\r\n\r\n    const eventStyleGetter = (event, start, end, isSelected) => {\r\n        //console.log(event, start, end, isSelected );\r\n\r\n        //console.log(event);\r\n\r\n        const style = { //personalizar el calendario\r\n            backgroundColor: (uid === event.user._id) ? '#367cf7' : '#465660', //poner colores diferentes por usuario\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            //display: 'block',\r\n            color: 'white',\r\n            outline: 'none'\r\n        }\r\n        if (isSelected) {\r\n            style.backgroundColor = \"#023E8A\"\r\n        } /* else {\r\n            style.backgroundColor = \"#367cf7\"\r\n        } */\r\n\r\n        // console.log(event);\r\n        return {\r\n            style\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <Navbar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={events}\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                messages={messages}\r\n                eventPropGetter={eventStyleGetter}\r\n                onDoubleClickEvent={onDoubleClickEvent}\r\n                onSelectEvent={onSelectEvent}\r\n                onView={onViewChange}\r\n                onSelectSlot={onSelectSlot}\r\n                selectable={true}\r\n                view={lastView}\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n\r\n            <CalendarModal />\r\n\r\n            <div className=\"botones-container\">               \r\n                {\r\n                    (activeEvent) && <DeleteEventFab />\r\n                }\r\n                 <AddNewFab />\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n","//ARCHIVO REUTILIZABLE\r\n\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n  \r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","//ARCHIVO REUTILIZABLE\r\n\r\n//Basicamente da acceso de forma condicional a DashBoardRoutes en el AppRouter\r\n\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n   /*  console.log(rest.location.pathname); */\r\n    \r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />) //CAMBIO AQUI\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    Redirect\r\n} from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector(state => state.auth);\r\n\r\n    //saber si el usuario está autenticado o no para proteger las rutas\r\n    useEffect(() => {\r\n        dispatch(startChecking());\r\n    }, [dispatch])\r\n\r\n    //console.log(checking);\r\n    if (checking) { //se puede crear un componente para mostrar por ejemplo un circulito animado mientras carga\r\n        //en este caso me dio pereza hacer un componente aparte y lo dejo aquí\r\n        return (\r\n            <div className=\"cargando\">\r\n                <Loader\r\n                    type=\"Puff\"\r\n                    color=\"#00BFFF\"\r\n                    height={100}\r\n                    width={100}\r\n                    timeout={3000} //3 secs\r\n                />\r\n            </div>); \r\n    }\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>                 \r\n                    <PublicRoute \r\n                    exact \r\n                    path=\"/login\" \r\n                    component={LoginScreen} \r\n                    isAuthenticated={!!uid} /* !!es para convertir a un string a booleano que es lo que necesita el isAuthenticated */\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                    exact \r\n                    path=\"/\" \r\n                    component={CalendarScreen} \r\n                    isAuthenticated={!!uid}\r\n                    />\r\n                    <Redirect to=\"/\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <div>\r\n            <Provider store={store}>\r\n                <AppRouter />\r\n            </Provider>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n//console.log(process.env);\nReactDOM.render(\n\n    <CalendarApp />,\n\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}